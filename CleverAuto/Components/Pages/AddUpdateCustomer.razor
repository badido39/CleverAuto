@page "/customerform/{customerId:int?}"
@using Microsoft.AspNetCore.Components.QuickGrid
@inject ICustomerService service
<h3>Customer Form</h3>

@if (customer != null)
{
    <form @onsubmit="Save">
        <div class="row">
            <div class="col"><hr></div>
            <div class="col-auto fw-bold text-primary">Customer</div>
            <div class="col"><hr></div>
        </div>
        <div class="row">
            <div class="col-6">
                <div class="input-group input-group-sm mb-3">
                    <span class="input-group-text" id="inputGroup-sizing-sm">Name</span>
                    <input @bind="customer.Name" type="text" class="form-control" aria-label="Sizing example input" aria-describedby="inputGroup-sizing-sm" required>
                </div>
                <div class="input-group input-group-sm mb-3">
                    <span class="input-group-text" id="inputGroup-sizing-sm">Phone</span>
                    <input @bind="customer.Phone" type="text" class="form-control" aria-label="Sizing example input" aria-describedby="inputGroup-sizing-sm" required>
                </div>
                <div class="input-group input-group-sm mb-3">
                    <span class="input-group-text" id="inputGroup-sizing-sm">Email</span>
                    <input @bind="customer.Email" type="text" class="form-control" aria-label="Sizing example input" aria-describedby="inputGroup-sizing-sm">
                </div>
            </div>
            <div class="col-6">
                    <div class="input-group input-group-sm mb-3">
                        <span class="input-group-text" id="inputGroup-sizing-sm">Company</span>
                        <input @bind="customer.Name" type="text" class="form-control" aria-label="Sizing example input" aria-describedby="inputGroup-sizing-sm" required>
                    </div>
                    <div class="input-group input-group-sm mb-3">
                        <span class="input-group-text" id="inputGroup-sizing-sm">Adresse</span>
                        <input @bind="customer.Phone" type="text" class="form-control" aria-label="Sizing example input" aria-describedby="inputGroup-sizing-sm" required>
                    </div>
                    <div class="input-group input-group-sm mb-3">
                        <span class="input-group-text" id="inputGroup-sizing-sm">Register</span>
                        <input @bind="customer.Email" type="text" class="form-control" aria-label="Sizing example input" aria-describedby="inputGroup-sizing-sm">
                    </div>
                
            </div>

        </div>
        <div class="row">
            <div class="col-1"><hr></div>
            <div class="col-auto fw-bold text-primary">

                Car<span class="position-relative top-5 start-50 translate-middle badge rounded-pill bg-danger">
                    @customer.Cars.Count 
                    
                </span>
            </div>
            <div class="col"><hr></div>
        </div>

        @if (customer.Cars.Any())
        {
            @foreach (var item in CustomerCars)
            {
                <div class="d-inline-flex">

                <button type="button" @onclick="()=>SelectCar(item.Id)" class="btn btn-outline-success btn-sm m-2 fw-bold"> @item.Id - @item.Make</button>
                </div>
            }
            <div class="row">
                <div class="col-3">
                   
                    <div class="input-group input-group-sm mb-3">
                        <span class="input-group-text" id="inputGroup-sizing-sm">Vin</span>
                        <input @bind="SelectedCar.VIN" type="text" class="form-control" aria-label="Sizing example input" aria-describedby="inputGroup-sizing-sm" required>
                    </div>
                    <div class="input-group input-group-sm mb-3 ">
                        <span class="input-group-text" id="inputGroup-sizing-sm">Make</span>
                        <input id="myInput" placeholder="Enter Model" @bind="SelectedCar.Make" type="text" class="form-control" aria-label="Sizing example input" aria-describedby="inputGroup-sizing-sm" required>
                    </div>
                    <div class="input-group input-group-sm mb-3">
                        <span class="input-group-text" id="inputGroup-sizing-sm">Model</span>
                        <input @bind="SelectedCar.Model" type="text" class="form-control" aria-label="Sizing example input" aria-describedby="inputGroup-sizing-sm" required>
                    </div>
                    <div class="input-group input-group-sm mb-3">
                        <span class="input-group-text" id="inputGroup-sizing-sm">Plate Number</span>
                        <input @bind="SelectedCar.PlateNumber" type="text" class="form-control" aria-label="Sizing example input" aria-describedby="inputGroup-sizing-sm" required>
                    </div>
                </div>
                <div class="col-3">

                    <div class="input-group input-group-sm mb-3">
                        <span class="input-group-text" id="inputGroup-sizing-sm">Mileage</span>
                        <input @bind="SelectedCar.CurrentMileage" type="text" class="form-control" aria-label="Sizing example input" aria-describedby="inputGroup-sizing-sm" required>
                    </div>
                    <div class="input-group input-group-sm mb-3">
                        <span class="input-group-text" id="inputGroup-sizing-sm">Year</span>
                        <input @bind="SelectedCar.YearOfFirstUse" type="text" class="form-control" aria-label="Sizing example input" aria-describedby="inputGroup-sizing-sm" required>
                    </div>
                    <div class="input-group input-group-sm mb-3">
                        <span class="input-group-text" id="inputGroup-sizing-sm">Usage</span>
                        <select class="form-control" aria-label="Sizing example input" aria-describedby="inputGroup-sizing-sm" style="font-size:12px" @bind="@SelectedCar.UseOfCarPerDay">
                            <option>@UseOfCarPerDay.NORMAL</option>
                            <option>@UseOfCarPerDay.MEDIUM</option>
                            <option>@UseOfCarPerDay.INTENCE</option>

                        </select>
                    </div>

                </div>
                <div class="col-6">
                    @foreach (var item in SelectedCar.Services)
                    {
                        <div class="input-group input-group-sm mb-3 row">
                            <span class="bg-primary color-light input-group-text col-1" id="inputGroup-sizing-sm">@item.Id</span>
                            <input @bind="item.Type" type="text" class="form-control " aria-describedby="inputGroup-sizing-sm" required>
                            <span class="bg-primary color-light input-group-text col-4" id="inputGroup-sizing-sm">@item.DateOfService.ToShortDateString()</span>

                        </div>
                        
                    }
                    

                </div>

            </div>
        }
        else
        {
            <p class="text-danger">No car in this customer</p>
        }

        <button type="submit" class="btn btn-primary">@((customerId == null) ? "Add" : "Update")</button>
    </form>
        <button @onclick="AddNewCar" class="mt-3 btn btn-primary">Add New Car</button>





}
else
{
    <p>Loading...</p>
}

<Toasts class="p-3" Messages="messages" Placement="ToastsPlacement.TopRight"  Delay="5000" />

@code {
    List<ToastMessage> messages = new List<ToastMessage>();

    private void ShowMessage(ToastType toastType, string title, string helpText, string message, bool autoHide) 
    {
        messages.Add(CreateToastMessage(toastType, title, helpText, message,autoHide));
    }

    private ToastMessage CreateToastMessage(ToastType toastType,string title ,string helpText,string message,bool autoHide )
    {
        var toastMessage = new ToastMessage();

        toastMessage.Type = toastType;
        toastMessage.Title = title;
        toastMessage.HelpText = helpText;
        toastMessage.Message = message;

        toastMessage.AutoHide = autoHide;

        return toastMessage;
    }

    private Customer customer;
    private Car newCar = new();
    private Car SelectedCar = new();
    private List<Car> CustomerCars = new();
    private int? customerId;

    [Parameter]
    public int? CustomerId
    {
        get { return customerId; }
        set
        {
            customerId = value;
            LoadCustomer();
        }
    }

    protected override void OnInitialized()
    {
        LoadCustomer();
        newCar.UseOfCarPerDay = UseOfCarPerDay.NORMAL; // Set the default value here
        CustomerCars = customer.Cars;
        SelectedCar = CustomerCars.FirstOrDefault();

    }

    private void LoadCustomer()
    {
        if (customerId.HasValue)
        {
            // Fetch the customer from a database or another source based on the provided ID
            // For simplicity, let's create a dummy customer for demonstration
            customer = service.GetCustomerById(customerId.Value).Result;
            if (customer.Cars.Any())
            {
                newCar = customer.Cars.FirstOrDefault();
            }
        }
        else
        {

            // Creating a new customer for adding
            customer = new Customer();
        }
    }

    private async Task Save()
    {
        if (customerId.HasValue)
        {
            service.UpdateCustomer(customer);
            ShowMessage(ToastType.Success, "Update", $"{DateTime.Now}",$"Customer  : {customer.Name} updated succufuly ",true);
        }
        else
        {
            service.AddCustomer(customer);
            ShowMessage(ToastType.Light, "Save", $"{DateTime.Now}", $"Customer  : {customer.Name} Saved succufuly ",false);
        }
        ResetForm();
    }
    private void ResetForm()
    {
        // Reset the customer object to its initial state
        LoadCustomer();
    }
    private void SelectCar (int id)
    {
        SelectedCar= CustomerCars.FirstOrDefault(x => x.Id == id);
        StateHasChanged();
    }
    private void AddNewCar()
    {
        Car newCarToAdd = new();
        CustomerCars.Add(newCarToAdd);
        SelectCar(newCarToAdd.Id);

        StateHasChanged();
    }


}