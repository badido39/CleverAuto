@page "/customerform/{customerId:int?}"
@inject ICustomerService service
<h3>Customer Form</h3>

@if (customer != null)
{
    <form @onsubmit="Save">
        <div class="input-group input-group-sm mb-3">
            <span class="input-group-text" id="inputGroup-sizing-sm">Name</span>
            <input @bind="customer.Name" type="text" class="form-control" aria-label="Sizing example input" aria-describedby="inputGroup-sizing-sm" required>
        </div>
        <div class="input-group input-group-sm mb-3">
            <span class="input-group-text" id="inputGroup-sizing-sm">Phone</span>
            <input @bind="customer.Phone" type="text" class="form-control" aria-label="Sizing example input" aria-describedby="inputGroup-sizing-sm" required>
        </div>
        <div class="input-group input-group-sm mb-3">
            <span class="input-group-text" id="inputGroup-sizing-sm">Email</span>
            <input @bind="customer.Email" type="text" class="form-control" aria-label="Sizing example input" aria-describedby="inputGroup-sizing-sm">
        </div>
        

        <button type="submit" class="btn btn-primary" >@((customerId == null) ? "Add" : "Update")</button>
    </form>
}
else
{
    <p>Loading...</p>
}

@code {
    private Customer customer;
    private int? customerId;

    [Parameter]
    public int? CustomerId
    {
        get { return customerId; }
        set
        {
            customerId = value;
            LoadCustomer();
        }
    }

    protected override void OnInitialized()
    {
        LoadCustomer();
    }

    private void LoadCustomer()
    {
        if (customerId.HasValue)
        {
            // Fetch the customer from a database or another source based on the provided ID
            // For simplicity, let's create a dummy customer for demonstration
            customer = service.GetCustomerById(customerId.Value).Result;
        }
        else
        {

            // Creating a new customer for adding
            customer = new Customer();
        }
    }

    private async Task Save()
    {
        if (customerId.HasValue)
        {

            service.UpdateCustomer(customer);
            
        }
        else
        {
            service.AddCustomer(customer);
        }
        ResetForm();
    }
    private void ResetForm()
    {
        // Reset the customer object to its initial state
        LoadCustomer();
    }
}