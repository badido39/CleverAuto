@page "/listCustomers"
@using CleverAuto.Models;
@using CleverAuto.Services;
@using Microsoft.AspNetCore.Components.QuickGrid;
@inject ICustomerService customerService;
<div class="grid">
    <QuickGrid Items="@FilteredItems" Pagination="@pagination">
        <TemplateColumn Title="Rank" SortBy="@rankSort" Align="Align.Center" InitialSortDirection="SortDirection.Ascending" IsDefaultSortColumn="true">
        </TemplateColumn>
        <PropertyColumn Property="@(c => c.Name)" Sortable="true" Class="country-name">
            <ColumnOptions>
                <div class="search-box">
                    <input type="search" autofocus @bind="nameFilter" @bind:event="oninput" placeholder="Country name..." />
                </div>
            </ColumnOptions>
        </PropertyColumn>
        <PropertyColumn Property="@(c => c.Name)" Sortable="true" Align="Align.Right" />
        <PropertyColumn Property="@(c => c.Email)" Sortable="true" Align="Align.Right" />
        <PropertyColumn Property="@(c => c.Car.VIN)" Sortable="true" Align="Align.Right" />
    </QuickGrid>
</div>

<Paginator State="@pagination" />

@code {
    IQueryable<Customer>? items;
    PaginationState pagination = new PaginationState { ItemsPerPage = 20 };
    string nameFilter = string.Empty;

    GridSort<Customer> rankSort = GridSort<Customer>
        .ByDescending(x => x.Name)
        .ThenDescending(x => x.Email);

    IQueryable<Customer>? FilteredItems => items?.Where(x => x.Name.Contains(nameFilter, StringComparison.CurrentCultureIgnoreCase));

    protected override async Task OnInitializedAsync()
    {
        items = (await customerService.GetAllCustomerAsync()).AsQueryable();
    }
}
