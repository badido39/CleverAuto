@page "/addcustomer"
@using Blazorise
@using CleverAuto.Models
@using CleverAuto.Services
@using System.Collections.ObjectModel;
@inject ICustomerService CustomerService;
@inject NavigationManager NavigationManager



@if (customer == null)
{
    <p>Loading...</p>
}
else
{
    
    <div class="container body w-100 ">



        <div class="card">
            <div class="card-header">
                <div class="p-0 cardTitle">


                    <h5> <Icon class="mx-4" Name="IconName.UserTie" IconSize="IconSize.x2" />Information De Client </h5>
                </div>
            </div>
            <div class="card-body">

                <form>
                    <div class="row">
                        <div class="col-sm-6">
                            <div class="form-group">
                                <label class="control-label"><Icon Name="IconName.UserCircle" IconSize="IconSize.Small" /> Nom & Prenom ou Siege Social</label>
                                <input type="text" class="form-control" placeholder="Entrez Nom et Prenom" @bind="customer.Name">
                            </div>
                        </div><!-- Col -->

                        <div class="col-sm-6">
                            <div class="form-group">
                                <label class="control-label"><Icon Name="IconName.Phone" IconSize="IconSize.Small" /> Telephone / Mobile</label>
                                <input type="text" class="form-control" placeholder="ex : 05## ## ## ##" @bind="customer.Phone" >
                            </div>
                        </div><!-- Col -->
                    </div><!-- Row -->

                    <div class="row">
                        <div class="col-sm-12">
                            <div class="form-group">
                                <label class="control-label"><Icon Name="IconName.Directions" IconSize="IconSize.Small" /> Adresse </label>
                                <input type="text" class="form-control" placeholder="Entrez Adresse " >
                            </div>
                        </div><!-- Col -->

                    </div><!-- Row -->

                    <div class="row">
                        <div class="col-sm-6">
                            <div class="form-group">
                                <label class="control-label"><Icon Name="IconName.Mail" IconSize="IconSize.Small" /> e-Mail</label>
                                <input type="email" class="form-control" placeholder="ex : john@email.com">
                            </div>
                        </div><!-- Col -->

                        <div class="col-sm-6">
                            <div class="form-group">
                                <label class="control-label">Memo</label>
                                <MemoEdit Rows="2" />
                            </div>
                        </div><!-- Col -->
                    </div><!-- Row -->
                </form>
            </div>
            <div class="card-header">
                <div class="p-0 cardTitle">


                    <h5> <Icon class="mx-4" Name="IconName.Car" IconSize="IconSize.x2" />Information De Vehicule </h5>
                </div>
            </div>
            <div class="card-body">

                <form>
                    <div class="row">
                        <div class="col-sm-3">
                            <div class="form-group">
                                <label class="control-label"><Icon Name="IconName.IdCard" IconSize="IconSize.Small" /> VIN / Numéro de châssis</label>
                                <input type="text" class="form-control" placeholder="Entrer 17 caractères" maxlength="17">
                            </div>
                        </div><!-- Col -->

                        <div class="col-sm-3">
                            <div class="form-group">
                                <label class="control-label">Marque</label>
                                <input type="text" class="form-control" placeholder="Enter la marque" >
                            </div>
                        </div><!-- Col -->
                        <div class="col-sm-3">
                            <div class="form-group">
                                <label class="control-label">Last Name</label>
                                <input type="text" class="form-control" placeholder="Enter last name">
                            </div>
                        </div><!-- Col -->
                    </div><!-- Row -->

                    <div class="row">
                        <div class="col-sm-4">
                            <div class="form-group">
                                <label class="control-label">City</label>
                                <input type="text" class="form-control" placeholder="Enter city">
                            </div>
                        </div><!-- Col -->

                        <div class="col-sm-4">
                            <div class="form-group">
                                <label class="control-label">State</label>
                                <input type="text" class="form-control" placeholder="Enter state">
                            </div>
                        </div><!-- Col -->

                        <div class="col-sm-4">
                            <div class="form-group">
                                <label class="control-label">Zip</label>
                                <input type="text" class="form-control" placeholder="Enter zip code">
                            </div>
                        </div><!-- Col -->
                    </div><!-- Row -->

                    <div class="row">
                        <div class="col-sm-6">
                            <div class="form-group">
                                <label class="control-label">Email address</label>
                                <input type="email" class="form-control" placeholder="Enter email">
                            </div>
                        </div><!-- Col -->

                        <div class="col-sm-6">
                            <div class="form-group">
                                <label class="control-label">Password</label>
                                <input type="password" class="form-control" placeholder="Password">
                            </div>
                        </div><!-- Col -->
                    </div><!-- Row -->
                </form>
            </div>
            <div class="card-header">
                <div class="p-0 cardTitle">

                    @if (serviceList.Where(x => x.Selected).Count() > 0)
                    {
                        <h5>
                            <Icon class="mx-4" Name="IconName.GasPump" IconSize="IconSize.x2" />Services Count : <span class="h5">@(serviceList.Where(x => x.Selected).Count())</span>
                        </h5>
                    }
                    else
                    {
                        <h5>
                            <Icon class="mx-4" Name="IconName.GasPump" IconSize="IconSize.x2" />Services Count : <Span class="text-danger  h5">0 Services</Span>
                        </h5>
                    }

                </div>
            </div>
            <div class="card-body">
                <form>
                    <div class="row">
                        @foreach (var (item, index) in serviceList.GroupBy(x => x.TypeDeService).Select(x => new { x.Key }).Select((value, i) => (value, i)))
                        {
                            <h5 style="color : @TitleColors[(int)item.Key];font-weight:900">
                                @(index + 1)    -  @item.Key
                            </h5>
                            @foreach (var typeService in serviceList.Where(x => x.TypeDeService == item.Key))
                            {
                                <div class="col-md-3 mx-2">
                                    <div class="input-group mb-1">
                                        <div class="input-group-prepend">
                                            <div class="input-group-text">
                                                <Check TValue="bool" class="p-0 ml-2" @bind-Checked="@typeService.Selected">@typeService.Name</Check>
                                                
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            }
                        }


                    </div>
                </form>
            </div>
        </div>
      

        <div class="card-footer">
            <div class="row">
                <div class="col-sm-12">
                    <div class="pull-right">
                        <button type="button" class="btn btn-default reset" >Reset</button>
                        <button type="button" class="btn btn-primary submit" @onclick="SaveCustomer">Submit</button>
                    </div>
                </div>
            </div>
        </div><!-- Panel Footer -->
    </div>


}

@code {
    private Customer customer= new();
    private List<ServiceList> serviceList;
    private List<string> TitleColors = new List<string>();
   


    protected override async Task OnInitializedAsync()
    {
        //services = await ServiceService.GetServices(); // Replace with your actual method for fetching services
        serviceList = new List<ServiceList> {
            new ServiceList { Id = 1, Name = "Vidange De Moteur" ,TypeDeService=TypeDeService.Lubrification} ,
            new ServiceList { Id = 2, Name = "Vidange De Boite",TypeDeService=TypeDeService.Lubrification } ,
            new ServiceList { Id = 3, Name = "Plaquette De Frein AV" ,TypeDeService=TypeDeService.Frein } ,
            new ServiceList { Id = 4, Name = "Plaquette De Frein ARR", TypeDeService=TypeDeService.Frein } ,
            new ServiceList { Id = 5, Name = "Remplacement Triangle Cote" ,TypeDeService=TypeDeService.Suspension} ,
            new ServiceList { Id = 6, Name = "Remplacement Souflet Cote",TypeDeService=TypeDeService.Suspension } ,
            new ServiceList { Id = 7, Name = "Remplacement Ammortisseur" ,TypeDeService =TypeDeService.Suspension} ,
            new ServiceList { Id = 8, Name = "Remplacement Ressort" ,TypeDeService = TypeDeService.Refroidissement } ,
            new ServiceList { Id = 9, Name = "Diagnostique Standard" ,TypeDeService = TypeDeService.Electrecite} ,

        }; // Replace with your actual method for fetching services

        int steps = serviceList.Count(); // Adjust the number of steps as needed
        for (int i = 0; i <= steps; i++)
        {
            string color = InterpolateColor(0, 0, 255, 255, 0, 255, (double)i / steps);
            TitleColors.Add(color);
        }
    }

    private void SaveCustomer()
    {
        var ServiceToAdd = serviceList.Where(s => s.Selected).ToList();
        Car car = new();
        foreach (var service in ServiceToAdd)
        {
            car.Services.Add(new Service { Type = service.Name, DateOfService = DateTime.Now, ReminderSent = false });
        }
        customer.Cars.Add(car);
        CustomerService.AddCustomer(customer);
        NavigationManager.NavigateTo("/listCustomers");
      
    }
    
   private string InterpolateColor(int r1, int g1, int b1, int r2, int g2, int b2, double t)
    {
        int r = (int)(r1 + (r2 - r1) * t);
        int g = (int)(g1 + (g2 - g1) * t);
        int b = (int)(b1 + (b2 - b1) * t);

        return $"#{r:X2}{g:X2}{b:X2}";
    }
}